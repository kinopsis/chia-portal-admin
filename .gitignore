# ===================================================================
# Portal de Atención Ciudadana de Chía - .gitignore
# Configuración optimizada para producción y despliegue en Coolify
# ===================================================================

# ===================================================================
# DOCUMENTACIÓN Y ARCHIVOS NO ESENCIALES PARA PRODUCCIÓN
# ===================================================================

# Directorios de documentación (excluidos para optimizar repositorio)
/Docs/
/docs/
/documentation/
/doc/

# Archivos de documentación adicionales (mantener README.md principal)
README-*.md
CHANGELOG-*.md
CONTRIBUTING.md
CODE_OF_CONDUCT.md
SECURITY.md
*.draft.md

# Archivos de configuración de desarrollo local
.augment/
.vscode/
.idea/
*.swp
*.swo
*~

# ===================================================================
# DEPENDENCIAS Y MÓDULOS
# ===================================================================

# Node.js dependencies
/node_modules/
/.pnp
.pnp.js
.yarn/install-state.gz
jspm_packages/

# Package manager files (mantener package.json y package-lock.json)
.npm
.yarn-integrity
yarn-error.log*
npm-debug.log*

# ===================================================================
# BUILD Y COMPILACIÓN
# ===================================================================

# Next.js build outputs
/.next/
/out/
/build/
.next

# TypeScript build info
*.tsbuildinfo
next-env.d.ts
tsconfig.temp.tsbuildinfo

# Production builds
/dist/
/build/

# ===================================================================
# TESTING Y COVERAGE
# ===================================================================

# Test coverage reports
/coverage/
.nyc_output
test-report.json

# Test artifacts y temporales
/tests/screenshots/
/tests/videos/
/tests/reports/
/tests/artifacts/
playwright-report/
test-results/

# ===================================================================
# LOGS Y ARCHIVOS TEMPORALES
# ===================================================================

# Log files
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Runtime data
pids/
*.pid
*.seed
*.pid.lock

# Temporary folders
tmp/
temp/
.tmp/

# ===================================================================
# VARIABLES DE ENTORNO Y CONFIGURACIÓN SENSIBLE
# ===================================================================

# Environment files (mantener .env.example)
.env
.env*.local
.env.production
.env.development

# Archivos de configuración local
config.local.js
config.local.json

# ===================================================================
# CACHE Y ARCHIVOS GENERADOS
# ===================================================================

# Cache directories
.cache/
.parcel-cache/
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# ===================================================================
# ARCHIVOS DEL SISTEMA OPERATIVO
# ===================================================================

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon?

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
Desktop.ini

# Linux
*~
.directory

# ===================================================================
# HERRAMIENTAS DE DESARROLLO
# ===================================================================

# Storybook build outputs
.out/
.storybook-out/
storybook-static/

# Vercel
.vercel/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# ===================================================================
# ARCHIVOS DE BACKUP Y TEMPORALES
# ===================================================================

# Backup files
*.bak
*.backup
*.old
*.orig
*.rej

# Temporary files
*.tmp
*.temp

# Editor temporales
.#*
\#*#

# ===================================================================
# ARCHIVOS ESENCIALES MANTENIDOS (NO IGNORAR)
# ===================================================================

# MANTENER ESTOS ARCHIVOS CRÍTICOS:
# - README.md (principal)
# - package.json y package-lock.json
# - coolify.yml (configuración de despliegue)
# - docker-compose.yml (si existe)
# - Dockerfile (si existe)
# - .env.example (template de variables)
# - /src/ (código fuente completo)
# - /public/ (assets públicos)
# - /supabase/ (migraciones de base de datos)
# - tailwind.config.ts, next.config.js, tsconfig.json
# - jest.config.js, playwright.config.ts (configuración de testing)

# ===================================================================
# CONFIGURACIÓN ESPECÍFICA PARA COOLIFY
# ===================================================================

# Mantener archivos necesarios para despliegue en Coolify:
# ✅ coolify.yml - Configuración de despliegue
# ✅ package.json - Dependencias y scripts
# ✅ next.config.js - Configuración de Next.js
# ✅ /src/ - Código fuente completo
# ✅ /public/ - Assets estáticos
# ✅ /supabase/migrations/ - Migraciones de base de datos
